%!PS-Adobe-2.0 EPSF-2.0
%%Title: mustek.tex
%%Creator: gnuplot 6.0 patchlevel 0
%%CreationDate: Tue Nov 12 14:34:28 2024
%%DocumentFonts: 
%%BoundingBox: 50 50 482 244
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 244 lineto 50 244 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mustek.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 6.0 patchlevel 0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 12 14:34:28 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
594 116 M
63 0 V
7586 0 R
-63 0 V
stroke
LTb
594 560 M
63 0 V
7586 0 R
-63 0 V
stroke
594 1004 M
63 0 V
7586 0 R
-63 0 V
stroke
594 1448 M
63 0 V
7586 0 R
-63 0 V
stroke
594 1892 M
63 0 V
7586 0 R
-63 0 V
stroke
594 2335 M
63 0 V
7586 0 R
-63 0 V
stroke
594 2779 M
63 0 V
7586 0 R
-63 0 V
stroke
594 3223 M
63 0 V
7586 0 R
-63 0 V
stroke
594 3667 M
63 0 V
7586 0 R
-63 0 V
stroke
594 116 M
0 63 V
0 3488 R
0 -63 V
stroke
1550 116 M
0 63 V
0 3488 R
0 -63 V
stroke
2506 116 M
0 63 V
0 3488 R
0 -63 V
stroke
3462 116 M
0 63 V
0 3488 R
0 -63 V
stroke
4419 116 M
0 63 V
0 3488 R
0 -63 V
stroke
5375 116 M
0 63 V
0 3488 R
0 -63 V
stroke
6331 116 M
0 63 V
0 3488 R
0 -63 V
stroke
7287 116 M
0 63 V
0 3488 R
0 -63 V
stroke
8243 116 M
0 63 V
0 3488 R
0 -63 V
stroke
1.000 UL
LTb
594 3667 N
594 116 L
7649 0 V
0 3551 V
-7649 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
785 259 Pls
804 272 Pls
823 283 Pls
843 292 Pls
862 299 Pls
881 304 Pls
900 307 Pls
919 307 Pls
938 306 Pls
957 301 Pls
976 295 Pls
996 287 Pls
1015 279 Pls
1034 270 Pls
1053 262 Pls
1072 253 Pls
1091 245 Pls
1110 237 Pls
1129 230 Pls
1149 222 Pls
1168 216 Pls
1187 210 Pls
1206 205 Pls
1225 201 Pls
1244 197 Pls
1263 194 Pls
1282 190 Pls
1302 187 Pls
1321 184 Pls
1340 181 Pls
1359 178 Pls
1378 175 Pls
1397 173 Pls
1416 171 Pls
1435 169 Pls
1455 168 Pls
1474 168 Pls
1493 168 Pls
1512 169 Pls
1531 171 Pls
1550 173 Pls
1569 177 Pls
1588 181 Pls
1607 186 Pls
1627 193 Pls
1646 202 Pls
1665 212 Pls
1684 224 Pls
1703 239 Pls
1722 256 Pls
1741 275 Pls
1760 297 Pls
1780 323 Pls
1799 352 Pls
1818 385 Pls
1837 421 Pls
1856 461 Pls
1875 506 Pls
1894 553 Pls
1913 606 Pls
1933 663 Pls
1952 724 Pls
1971 788 Pls
1990 854 Pls
2009 924 Pls
2028 994 Pls
2047 1067 Pls
2066 1141 Pls
2086 1215 Pls
2105 1291 Pls
2124 1367 Pls
2143 1444 Pls
2162 1521 Pls
2181 1597 Pls
2200 1673 Pls
2219 1747 Pls
2239 1816 Pls
2258 1881 Pls
2277 1944 Pls
2296 2002 Pls
2315 2060 Pls
2334 2114 Pls
2353 2165 Pls
2372 2213 Pls
2392 2258 Pls
2411 2301 Pls
2430 2342 Pls
2449 2380 Pls
2468 2419 Pls
2487 2455 Pls
2506 2489 Pls
2525 2520 Pls
2544 2548 Pls
2564 2574 Pls
2583 2599 Pls
2602 2621 Pls
2621 2641 Pls
2640 2662 Pls
2659 2680 Pls
2678 2698 Pls
2697 2715 Pls
2717 2731 Pls
2736 2745 Pls
2755 2755 Pls
2774 2766 Pls
2793 2776 Pls
2812 2784 Pls
2831 2790 Pls
2850 2795 Pls
2870 2800 Pls
2889 2803 Pls
2908 2805 Pls
2927 2805 Pls
2946 2805 Pls
2965 2803 Pls
2984 2798 Pls
3003 2794 Pls
3023 2788 Pls
3042 2781 Pls
3061 2773 Pls
3080 2764 Pls
3099 2753 Pls
3118 2739 Pls
3137 2725 Pls
3156 2709 Pls
3176 2693 Pls
3195 2675 Pls
3214 2655 Pls
3233 2632 Pls
3252 2606 Pls
3271 2576 Pls
3290 2545 Pls
3309 2511 Pls
3329 2473 Pls
3348 2432 Pls
3367 2387 Pls
3386 2338 Pls
3405 2288 Pls
3424 2234 Pls
3443 2179 Pls
3462 2127 Pls
3481 2074 Pls
3501 2024 Pls
3520 1978 Pls
3539 1937 Pls
3558 1902 Pls
3577 1873 Pls
3596 1851 Pls
3615 1832 Pls
3634 1817 Pls
3654 1807 Pls
3673 1799 Pls
3692 1795 Pls
3711 1792 Pls
3730 1790 Pls
3749 1788 Pls
3768 1788 Pls
3787 1788 Pls
3807 1788 Pls
3826 1787 Pls
3845 1786 Pls
3864 1785 Pls
3883 1786 Pls
3902 1788 Pls
3921 1792 Pls
3940 1800 Pls
3960 1811 Pls
3979 1825 Pls
3998 1843 Pls
4017 1865 Pls
4036 1892 Pls
4055 1921 Pls
4074 1952 Pls
4093 1985 Pls
4113 2017 Pls
4132 2050 Pls
4151 2083 Pls
4170 2114 Pls
4189 2144 Pls
4208 2173 Pls
4227 2200 Pls
4246 2224 Pls
4266 2247 Pls
4285 2267 Pls
4304 2285 Pls
4323 2303 Pls
4342 2317 Pls
4361 2331 Pls
4380 2343 Pls
4399 2352 Pls
4419 2360 Pls
4438 2370 Pls
4457 2380 Pls
4476 2388 Pls
4495 2393 Pls
4514 2397 Pls
4533 2397 Pls
4552 2396 Pls
4571 2394 Pls
4591 2392 Pls
4610 2388 Pls
4629 2386 Pls
4648 2387 Pls
4667 2390 Pls
4686 2396 Pls
4705 2406 Pls
4724 2418 Pls
4744 2434 Pls
4763 2453 Pls
4782 2472 Pls
4801 2495 Pls
4820 2518 Pls
4839 2543 Pls
4858 2568 Pls
4877 2594 Pls
4897 2618 Pls
4916 2641 Pls
4935 2660 Pls
4954 2680 Pls
4973 2696 Pls
4992 2712 Pls
5011 2727 Pls
5030 2739 Pls
5050 2751 Pls
5069 2759 Pls
5088 2767 Pls
5107 2775 Pls
5126 2780 Pls
5145 2786 Pls
5164 2791 Pls
5183 2797 Pls
5203 2802 Pls
5222 2808 Pls
5241 2815 Pls
5260 2823 Pls
5279 2833 Pls
5298 2843 Pls
5317 2856 Pls
5336 2867 Pls
5356 2881 Pls
5375 2895 Pls
5394 2910 Pls
5413 2926 Pls
5432 2942 Pls
5451 2956 Pls
5470 2970 Pls
5489 2985 Pls
5508 3000 Pls
5528 3015 Pls
5547 3030 Pls
5566 3046 Pls
5585 3060 Pls
5604 3074 Pls
5623 3085 Pls
5642 3093 Pls
5661 3100 Pls
5681 3106 Pls
5700 3112 Pls
5719 3118 Pls
5738 3126 Pls
5757 3132 Pls
5776 3140 Pls
5795 3150 Pls
5814 3159 Pls
5834 3166 Pls
5853 3174 Pls
5872 3179 Pls
5891 3187 Pls
5910 3193 Pls
5929 3198 Pls
5948 3200 Pls
5967 3203 Pls
5987 3204 Pls
6006 3205 Pls
6025 3205 Pls
6044 3204 Pls
6063 3200 Pls
6082 3199 Pls
6101 3201 Pls
6120 3207 Pls
6140 3214 Pls
6159 3222 Pls
6178 3228 Pls
6197 3233 Pls
6216 3236 Pls
6235 3237 Pls
6254 3238 Pls
6273 3240 Pls
6293 3244 Pls
6312 3244 Pls
6331 3245 Pls
6350 3251 Pls
6369 3255 Pls
6388 3261 Pls
6407 3267 Pls
6426 3273 Pls
6445 3278 Pls
6465 3285 Pls
6484 3291 Pls
6503 3297 Pls
6522 3303 Pls
6541 3307 Pls
6560 3312 Pls
6579 3318 Pls
6598 3323 Pls
6618 3329 Pls
6637 3333 Pls
6656 3337 Pls
6675 3342 Pls
6694 3345 Pls
6713 3349 Pls
6732 3354 Pls
6751 3358 Pls
6771 3362 Pls
6790 3364 Pls
6809 3367 Pls
6828 3370 Pls
6847 3371 Pls
6866 3374 Pls
6885 3376 Pls
6904 3377 Pls
6924 3378 Pls
6943 3381 Pls
6962 3383 Pls
6981 3385 Pls
7000 3387 Pls
7019 3388 Pls
7038 3388 Pls
7057 3387 Pls
7077 3388 Pls
7096 3389 Pls
7115 3388 Pls
7134 3388 Pls
7153 3388 Pls
7172 3388 Pls
7191 3388 Pls
7210 3387 Pls
7230 3387 Pls
7249 3386 Pls
7268 3385 Pls
7287 3385 Pls
7306 3385 Pls
7325 3384 Pls
7344 3385 Pls
7363 3384 Pls
7382 3386 Pls
7402 3389 Pls
7421 3391 Pls
7440 3392 Pls
7459 3396 Pls
7478 3398 Pls
7683 3494 Pls
LTw
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UL
LTb
594 3667 N
594 116 L
7649 0 V
0 3551 V
-7649 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
